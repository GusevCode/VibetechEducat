@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Vibetech.Educat.Common.Models
@model Vibetech.Educat.Pages.Account.StudentProfileModel
@{
    ViewData["Title"] = "Профиль ученика";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/light.css">

<div class="container-fluid mt-4">
    <!-- Success message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    <!-- Info message (for teacher removal notifications) -->
    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="bi bi-info-circle-fill me-2"></i>@TempData["InfoMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    <div class="row">
        <div class="col-md-3">
            <div class="card shadow-sm mb-4">
                <div class="card-body text-center">
                    <div class="text-center mb-4">
                        <div class="position-relative d-inline-block">
                            @if (!string.IsNullOrEmpty(Model.PhotoUrl) && Model.PhotoUrl != "/images/default-avatar.jpg")
                            {
                                <img src="@Model.PhotoUrl" alt="Фото профиля" class="img-fluid rounded-circle profile-photo" style="width: 150px; height: 150px; object-fit: cover;" />
                            }
                            else
                            {
                                <div class="rounded-circle bg-light d-flex align-items-center justify-content-center" style="width: 150px; height: 150px;">
                                    <i class="bi bi-person-fill" style="font-size: 4rem; color: #6c757d;"></i>
                                </div>
                            }
                            <button type="button" class="btn btn-sm btn-primary position-absolute bottom-0 end-0" data-bs-toggle="modal" data-bs-target="#editPhotoModal">
                                <i class="bi bi-camera-fill"></i>
                            </button>
                        </div>
                    </div>
                    <h4>@Model.FullName</h4>
                    <p class="text-muted">Ученик</p>
                </div>
            </div>
            
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Статистика</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Всего уроков:</span>
                        <span class="fw-bold">@Model.TotalLessonsCount</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Завершено уроков:</span>
                        <span class="fw-bold">@Model.CompletedLessonsCount</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Предстоящие уроки:</span>
                        <span class="fw-bold">@Model.UpcomingLessonsCount</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Репетиторов:</span>
                        <span class="fw-bold">@Model.TeachersCount</span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-9">
            <div class="card shadow-sm mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Личная информация</h5>
                    <button class="btn btn-outline-primary btn-sm" id="editMainInfoButton">
                        <i class="bi bi-pencil"></i> Редактировать
                    </button>
                </div>
                <div class="card-body">
                    <form method="post" id="mainInfoForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Input.FirstName" class="form-label">Имя</label>
                                <input asp-for="Input.FirstName" class="form-control" readonly />
                                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Input.LastName" class="form-label">Фамилия</label>
                                <input asp-for="Input.LastName" class="form-control" readonly />
                                <span asp-validation-for="Input.LastName" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Input.MiddleName" class="form-label">Отчество</label>
                                <input asp-for="Input.MiddleName" class="form-control" readonly />
                                <span asp-validation-for="Input.MiddleName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Input.BirthDate" class="form-label">Дата рождения</label>
                                <input asp-for="Input.BirthDate" class="form-control datepicker" type="text" readonly 
                                       data-val="true" data-val-required="Поле Дата рождения обязательно для заполнения" />
                                <span asp-validation-for="Input.BirthDate" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Input.Gender" class="form-label">Пол</label>
                                <select asp-for="Input.Gender" class="form-select" disabled>
                                    <option value="Male">Мужской</option>
                                    <option value="Female">Женский</option>
                                </select>
                                <span asp-validation-for="Input.Gender" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Input.ContactInformation" class="form-label">
                                    <i class="bi bi-chat-fill me-1"></i>Контактная информация
                                </label>
                                <textarea asp-for="Input.ContactInformation" class="form-control" rows="2" readonly></textarea>
                                <div class="form-text">Телефон, Telegram, WhatsApp, VK и т.д.</div>
                                <span asp-validation-for="Input.ContactInformation" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="d-none" id="mainInfoControls">
                            <button type="submit" class="btn btn-primary">Сохранить</button>
                            <button type="button" class="btn btn-secondary" id="cancelMainInfoEdit">Отмена</button>
                        </div>
                    </form>
                </div>
            </div>
            
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="card-title mb-0">Мои репетиторы</h5>
                </div>
                <div class="card-body">
                    @if (Model.Teachers.Any())
                    {
                        <div class="row">
                            @foreach (var teacher in Model.Teachers)
                            {
                                <div class="col-md-6 col-lg-4 mb-4">
                                    <div class="card h-100">
                                        <div class="card-body">
                                            <div class="d-flex align-items-center mb-3">
                                                @if (!string.IsNullOrEmpty(teacher.User.PhotoBase64))
                                                {
                                                    <img src="data:image/jpeg;base64,@teacher.User.PhotoBase64" 
                                                         class="rounded-circle me-3" 
                                                         style="width: 50px; height: 50px; object-fit: cover;" />
                                                }
                                                else
                                                {
                                                    <div class="rounded-circle bg-light d-flex align-items-center justify-content-center me-3" 
                                                         style="width: 50px; height: 50px;">
                                                        <i class="bi bi-person text-secondary"></i>
                                                    </div>
                                                }
                                                <div>
                                                    <h6 class="mb-0">@($"{teacher.User.LastName} {teacher.User.FirstName}")</h6>
                                                    <div class="text-muted small">
                                                        @(teacher.TeacherSubjects.FirstOrDefault()?.Subject?.Name ?? "Предмет не указан")
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span>Рейтинг:</span>
                                                <span class="text-warning">
                                                    @teacher.Rating <i class="bi bi-star-fill"></i>
                                                </span>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <span>Цена:</span>
                                                <span>@teacher.HourlyRate ₽/час</span>
                                            </div>
                                            <div class="mt-3 text-end">
                                                <button type="button" class="btn btn-outline-danger btn-sm"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#removeTeacherModal"
                                                        data-teacher-id="@teacher.Id"
                                                        data-teacher-name="@($"{teacher.User.LastName} {teacher.User.FirstName}")">
                                                    <i class="bi bi-person-x"></i> Удалить репетитора
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info mb-0">
                            У вас пока нет репетиторов. 
                            <a href="/Search/Tutors" class="alert-link">Найти репетитора</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно для изменения фото -->
<div class="modal fade" id="editPhotoModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Изменение фото</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data" asp-page-handler="UpdatePhoto">
                    <div class="mb-3">
                        <label class="form-label">Выберите новое фото</label>
                        <input type="file" class="form-control" name="photo" accept="image/*" id="photoInput" />
                        <div class="form-text">Максимальный размер файла: 2MB</div>
                    </div>
                    <button type="submit" class="btn btn-primary" id="uploadPhotoBtn" disabled>Загрузить</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно для подтверждения удаления репетитора -->
<div class="modal fade" id="removeTeacherModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Подтверждение удаления</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Вы уверены, что хотите удалить репетитора <span id="teacherName"></span>?</p>
                <p class="text-danger">Это действие нельзя отменить. Вы больше не будете отображаться в списке учеников этого репетитора. Для возобновления занятий вам придется отправить новую заявку.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-danger" id="confirmRemoveTeacherButton">Удалить</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://npmcdn.com/flatpickr/dist/l10n/ru.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const editMainInfoButton = document.getElementById('editMainInfoButton');
            const cancelMainInfoEditButton = document.getElementById('cancelMainInfoEdit');
            const mainInfoControls = document.getElementById('mainInfoControls');
            const mainInfoInputs = document.querySelectorAll('#mainInfoForm input:not([type="hidden"]), #mainInfoForm select, #mainInfoForm textarea');
            
            // Initialize Flatpickr for date picker
            let datepickerInstances = [];
            
            function initDatepickers() {
                // Destroy any existing instances
                datepickerInstances.forEach(instance => instance.destroy());
                datepickerInstances = [];
                
                // Only initialize datepickers when the form is in edit mode
                if (!document.getElementById('mainInfoControls').classList.contains('d-none')) {
                    const dateInputs = document.querySelectorAll('.datepicker');
                    dateInputs.forEach(input => {
                        const instance = flatpickr(input, {
                            dateFormat: "d.m.Y",
                            locale: "ru",
                            maxDate: new Date(),
                            allowInput: true,
                            disableMobile: true,
                            position: "auto"
                        });
                        datepickerInstances.push(instance);
                    });
                }
            }
            
            // Modify existing edit button event listener to initialize datepickers
            editMainInfoButton.addEventListener('click', function() {
                mainInfoInputs.forEach(input => {
                    input.removeAttribute('readonly');
                    input.removeAttribute('disabled');
                });
                mainInfoControls.classList.remove('d-none');
                editMainInfoButton.classList.add('d-none');
                
                // Initialize datepickers after switching to edit mode
                initDatepickers();
            });
            
            // Modify existing cancel button event listener to destroy datepickers
            cancelMainInfoEditButton.addEventListener('click', function() {
                mainInfoInputs.forEach(input => {
                    input.setAttribute('readonly', '');
                    if (input.tagName.toLowerCase() === 'select') {
                        input.setAttribute('disabled', '');
                    }
                });
                mainInfoControls.classList.add('d-none');
                editMainInfoButton.classList.remove('d-none');
                
                // Destroy datepickers when exiting edit mode
                datepickerInstances.forEach(instance => instance.destroy());
                datepickerInstances = [];
            });
            
            // Auto hide alerts after 5 seconds
            setTimeout(function() {
                const alerts = document.querySelectorAll('.alert:not(.alert-info)');
                alerts.forEach(alert => {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);

            // Enable/disable photo upload button based on file selection
            document.getElementById('photoInput')?.addEventListener('change', function() {
                document.getElementById('uploadPhotoBtn').disabled = !this.files.length;
            });
            
            // Обработка модального окна для удаления репетитора
            const removeTeacherModal = document.getElementById('removeTeacherModal');
            const teacherNameElement = document.getElementById('teacherName');
            const confirmRemoveTeacherButton = document.getElementById('confirmRemoveTeacherButton');
            let currentTeacherId = null;

            if (removeTeacherModal) {
                removeTeacherModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    currentTeacherId = button.getAttribute('data-teacher-id');
                    const teacherName = button.getAttribute('data-teacher-name');
                    
                    teacherNameElement.textContent = teacherName;
                });

                confirmRemoveTeacherButton.addEventListener('click', async function() {
                    if (currentTeacherId) {
                        try {
                            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                            const response = await fetch(`?handler=RemoveTeacher&teacherId=${currentTeacherId}`, {
                                method: 'POST',
                                headers: {
                                    'RequestVerificationToken': token
                                }
                            });
                            
                            const result = await response.json();
                            if (result.success) {
                                location.reload();
                            } else {
                                alert(result.message || 'Произошла ошибка при удалении репетитора');
                            }
                        } catch (error) {
                            console.error(error);
                            alert('Произошла ошибка при отправке запроса');
                        }
                    }
                });
            }
        });
    </script>
} 