@page
@model Vibetech.Educat.Pages.Account.RegisterModel
@{
    ViewData["Title"] = "Регистрация";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">

<style>
    .button-spacing {
        margin-top: 15px;
    }
    
    /* Исправление стилей календаря */
    .flatpickr-calendar {
        z-index: 9999 !important;
    }
    
    /* Гарантируем видимость */
    .flatpickr-calendar.open {
        display: block !important;
    }
    
    /* Стилизация поля даты */
    #birthDatePicker {
        background-color: #fff;
        cursor: pointer;
    }
    
    #birthDatePicker:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        border-color: #86b7fe;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body p-5">
                    <h2 class="card-title text-center mb-4">Регистрация</h2>

                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>@Model.ErrorMessage
                        </div>
                    }

                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    <form method="post" enctype="multipart/form-data">
                        <div class="mb-4">
                            <label class="form-label fw-bold">Выберите роль</label>
                            <div class="d-flex gap-3">
                                <input type="radio" class="btn-check" name="Input.Role" id="roleStudent" value="Student" checked>
                                <label class="btn btn-outline-primary flex-grow-1" for="roleStudent">
                                    <i class="bi bi-mortarboard-fill me-2"></i>Ученик
                                </label>

                                <input type="radio" class="btn-check" name="Input.Role" id="roleTutor" value="Tutor">
                                <label class="btn btn-outline-primary flex-grow-1" for="roleTutor">
                                    <i class="bi bi-person-workspace me-2"></i>Репетитор
                                </label>
                            </div>
                            <span asp-validation-for="Input.Role" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Login" class="form-label fw-bold">
                                <i class="bi bi-person-circle me-2"></i>Логин
                            </label>
                            <input asp-for="Input.Login" class="form-control" placeholder="Введите логин" />
                            <span asp-validation-for="Input.Login" class="text-danger"></span>
                            @if (Model.LoginAlreadyExists)
                            {
                                <div class="text-danger mt-1">
                                    <i class="bi bi-exclamation-triangle-fill me-1"></i>Пользователь с таким логином уже существует
                                </div>
                            }
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Password" class="form-label fw-bold">
                                <i class="bi bi-key-fill me-2"></i>Пароль
                            </label>
                            <input asp-for="Input.Password" type="password" class="form-control" placeholder="Введите пароль" />
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.ConfirmPassword" class="form-label fw-bold">
                                <i class="bi bi-key me-2"></i>Подтверждение пароля
                            </label>
                            <input asp-for="Input.ConfirmPassword" type="password" class="form-control" placeholder="Подтвердите пароль" />
                            <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Input.LastName" class="form-label fw-bold">
                                        <i class="bi bi-person-vcard me-2"></i>Фамилия
                                    </label>
                                    <input asp-for="Input.LastName" class="form-control" placeholder="Введите фамилию" />
                                    <span asp-validation-for="Input.LastName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Input.FirstName" class="form-label fw-bold">
                                        <i class="bi bi-person me-2"></i>Имя
                                    </label>
                                    <input asp-for="Input.FirstName" class="form-control" placeholder="Введите имя" />
                                    <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Input.MiddleName" class="form-label fw-bold">
                                        <i class="bi bi-person me-2"></i>Отчество
                                    </label>
                                    <input asp-for="Input.MiddleName" class="form-control" placeholder="Введите отчество" />
                                    <span asp-validation-for="Input.MiddleName" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3 w-100">
                            <label asp-for="Input.BirthDate" class="form-label fw-bold">
                                <i class="bi bi-calendar3 me-2"></i>Дата рождения
                            </label>
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1">
                                    <input asp-for="Input.BirthDate" type="text" class="form-control datepicker" id="birthDatePicker" placeholder="Выберите дату рождения" value="" readonly />
                                </div>
                            </div>
                            <span asp-validation-for="Input.BirthDate" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-bold">
                                <i class="bi bi-gender-ambiguous me-2"></i>Пол
                            </label>
                            <div class="d-flex gap-3">
                                <input type="radio" class="btn-check" name="Input.Gender" id="genderMale" value="Male">
                                <label class="btn btn-outline-secondary flex-grow-1" for="genderMale">
                                    <i class="bi bi-gender-male me-2"></i>Мужской
                                </label>

                                <input type="radio" class="btn-check" name="Input.Gender" id="genderFemale" value="Female">
                                <label class="btn btn-outline-secondary flex-grow-1" for="genderFemale">
                                    <i class="bi bi-gender-female me-2"></i>Женский
                                </label>
                            </div>
                            <span asp-validation-for="Input.Gender" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Photo" class="form-label fw-bold">
                                <i class="bi bi-camera me-2"></i>Фото
                            </label>
                            <input asp-for="Input.Photo" type="file" class="form-control" accept="image/*" />
                            <span asp-validation-for="Input.Photo" class="text-danger"></span>
                        </div>

                        <div id="tutorFields" style="display: none;">
                            <div class="mb-4">
                                <div class="alert alert-info" role="alert">
                                    <i class="bi bi-info-circle-fill me-2"></i>
                                    <strong>Обратите внимание!</strong> Для регистрации в качестве репетитора необходимо заполнить следующие поля:
                                    <ul class="mb-0 mt-2">
                                        <li>Образование</li>
                                        <li>Стоимость часа</li>
                                        <li>Опыт работы</li>
                                        <li>Выбрать хотя бы один предмет</li>
                                        <li>Выбрать хотя бы одну программу подготовки</li>
                                    </ul>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label asp-for="Input.Education" class="form-label fw-bold">
                                    <i class="bi bi-mortarboard me-2"></i>Образование
                                </label>
                                <textarea asp-for="Input.Education" class="form-control" placeholder="Введите информацию об образовании (ВУЗ, факультет, специальность, год окончания)" rows="3"></textarea>
                                <span asp-validation-for="Input.Education" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="bi bi-list-check me-2"></i>Программы подготовки
                                </label>
                                <div id="programsContainer" class="d-flex flex-wrap gap-2 mb-2">
                                    <!-- Здесь будут отображаться выбранные программы -->
                                </div>
                                <select id="programSelect" class="form-select">
                                    @foreach (var program in Model.AvailablePrograms)
                                    {
                                        <option value="@program.Value">@program.Text</option>
                                    }
                                </select>
                                <div class="button-spacing">
                                    <button class="btn btn-outline-primary w-100" type="button" id="addProgramBtn">
                                        <i class="bi bi-plus-lg"></i> Добавить программу
                                    </button>
                                </div>
                                <!-- Скрытые поля для передачи данных -->
                                <div id="selectedProgramsInputs">
                                    <!-- сюда будут добавляться hidden inputs -->
                                </div>
                                <span asp-validation-for="Input.SelectedPrograms" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.ExperienceYears" class="form-label fw-bold">
                                    <i class="bi bi-clock-history me-2"></i>Опыт работы (лет)
                                </label>
                                <input asp-for="Input.ExperienceYears" type="number" class="form-control" placeholder="Введите опыт работы" />
                                <span asp-validation-for="Input.ExperienceYears" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.HourlyRate" class="form-label fw-bold">
                                    <i class="bi bi-currency-ruble me-2"></i>Базовая стоимость часа (₽)
                                </label>
                                <input asp-for="Input.HourlyRate" type="number" class="form-control" placeholder="Введите стоимость" />
                                <span asp-validation-for="Input.HourlyRate" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="bi bi-book me-2"></i>Предметы
                                </label>
                                <div id="subjectsContainer" class="d-flex flex-wrap gap-2 mb-2">
                                    <!-- Здесь будут отображаться выбранные предметы -->
                                </div>
                                <select id="subjectSelect" class="form-select">
                                    @foreach (var subject in Model.AvailableSubjects)
                                    {
                                        <option value="@subject.Value">@subject.Text</option>
                                    }
                                </select>
                                <div class="button-spacing">
                                    <button class="btn btn-outline-primary w-100" type="button" id="addSubjectBtn">
                                        <i class="bi bi-plus-lg"></i> Добавить предмет
                                    </button>
                                </div>
                                <!-- Скрытые поля для передачи данных -->
                                <div id="selectedSubjectsInputs">
                                    <!-- сюда будут добавляться hidden inputs -->
                                </div>
                                <span asp-validation-for="Input.SelectedSubjects" class="text-danger"></span>
                            </div>

                            <div id="subjectPrices" class="mb-3">
                                <!-- Здесь будут отображаться поля для индивидуальных цен по предметам -->
                            </div>
                        </div>

                        <div class="d-grid gap-2 mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-person-plus-fill me-2"></i>Зарегистрироваться
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/ru.js"></script>
    <script>
        // Исполняется гарантированно после полной загрузки DOM
        $(document).ready(function() {
            // Ссылка на DOM-элемент календаря
            const dateInput = document.getElementById('birthDatePicker');
            
            // Проверяем, что элемент найден
            if (!dateInput) {
                console.error("Элемент календаря не найден на странице");
                return;
            }
            
            // Перехватываем стандартное сообщение об ошибке валидации даты
            $.validator.messages.date = "Пожалуйста, введите корректную дату";
            
            try {
                // Кастомное сообщение для поля даты рождения
                $('form').data('validator').settings.messages["Input.BirthDate"] = {
                    required: "Пожалуйста, выберите дату рождения"
                };
            } catch (e) {
                console.error("Ошибка настройки валидатора:", e);
            }
            
            // Создаем календарь принудительно на конкретном элементе
            let fpInstance = null;
            try {
                fpInstance = flatpickr(dateInput, {
                    dateFormat: "d.m.Y",
                    locale: "ru",
                    maxDate: new Date(),
                    allowInput: false,
                    disableMobile: true,
                    static: true,
                    position: "below center",
                    defaultDate: null,
                    clickOpens: true,
                    appendTo: document.body, // Прикрепляем к body для максимальной видимости
                    onOpen: function() {
                        console.log("Календарь открыт");
                    },
                    onClose: function() {
                        console.log("Календарь закрыт");
                    },
                    onChange: function(selectedDates, dateStr) {
                        console.log("Выбрана дата:", dateStr);
                        if (dateStr) {
                            $(dateInput).attr('data-date-set', 'true');
                            try {
                                $('form').validate().element(dateInput);
                            } catch (e) {
                                console.error("Ошибка валидации:", e);
                            }
                        }
                    }
                });
                
                console.log("Календарь успешно инициализирован");
                
                // Проверка и принудительная установка русской локализации
                if (flatpickr.l10ns && flatpickr.l10ns.ru) {
                    flatpickr.localize(flatpickr.l10ns.ru);
                    console.log("Локализация установлена");
                } else {
                    console.error("Локализация не найдена");
                }
            } catch (e) {
                console.error("Ошибка инициализации календаря:", e);
            }
            
            // Добавляем кастомное правило валидации
            try {
                $.validator.addMethod("birthDateRequired", function(value, element) {
                    return $(element).attr('data-date-set') === 'true';
                }, "Пожалуйста, выберите дату рождения");
                
                // Добавляем правило к полю даты рождения
                $(dateInput).rules("add", {
                    birthDateRequired: true
                });
            } catch (e) {
                console.error("Ошибка добавления правила валидации:", e);
            }
            
            // При отправке формы проверяем, что дата выбрана
            $('form').submit(function(e) {
                if (!$(dateInput).attr('data-date-set')) {
                    e.preventDefault();
                    // Отображаем ошибку
                    $(dateInput).addClass('is-invalid');
                    let errorMsg = $('<div id="Input_BirthDate-error" class="text-danger">Пожалуйста, выберите дату рождения</div>');
                    if (!$('#Input_BirthDate-error').length) {
                        errorMsg.insertAfter($(dateInput).closest('.position-relative'));
                    }
                    // Прокручиваем к полю с ошибкой
                    $('html, body').animate({
                        scrollTop: $(dateInput).offset().top - 100
                    }, 200);
                    
                    // Дополнительно, попробуем открыть календарь
                    if (fpInstance) {
                        setTimeout(function() {
                            fpInstance.open();
                        }, 300);
                    }
                }
            });
            
            // Инициализация Select2 для выпадающих списков
            $('#subjectSelect').select2({
                placeholder: 'Выберите предмет',
                width: '100%'
            });

            $('#programSelect').select2({
                placeholder: 'Выберите программу',
                width: '100%'
            });

            // Показываем/скрываем поля репетитора при выборе роли
            $('input[name="Input.Role"]').change(function() {
                if ($(this).val() === 'Tutor') {
                    $('#tutorFields').show();
                } else {
                    $('#tutorFields').hide();
                }
            });

            // Управление программами подготовки
            $('#addProgramBtn').click(function() {
                const select = $('#programSelect');
                const program = select.val();
                const programText = select.find('option:selected').text();
                
                if (!program) return;
                
                // Проверяем, не выбрана ли уже эта программа
                if ($('#programsContainer').find(`[data-program="${program}"]`).length === 0) {
                    // Создаем бейдж для программы
                    const badge = $(`
                        <div class="badge bg-primary d-flex align-items-center mb-1 me-1" data-program="${program}">
                            <span>${programText}</span>
                            <button type="button" class="btn-close btn-close-white ms-2 delete-program-btn" aria-label="Close"></button>
                            <input type="hidden" name="Input.SelectedPrograms" value="${program}" />
                        </div>
                    `);
                    
                    // Добавляем обработчик для удаления
                    badge.find('.delete-program-btn').click(function() {
                        badge.remove();
                        
                        // Возвращаем опцию в селект
                        if (select.find(`option[value="${program}"]`).length === 0) {
                            select.append(new Option(programText, program));
                            select.val(null).trigger('change');
                        }
                    });
                    
                    // Добавляем бейдж в контейнер
                    $('#programsContainer').append(badge);
                    
                    // Удаляем опцию из селекта
                    select.find(`option[value="${program}"]`).remove();
                    select.val(null).trigger('change');
                }
            });

            // Управление предметами
            $('#addSubjectBtn').click(function() {
                const select = $('#subjectSelect');
                const subjectId = select.val();
                const subjectText = select.find('option:selected').text();
                
                if (!subjectId) return;
                
                // Проверяем, не выбран ли уже этот предмет
                if ($('#subjectsContainer').find(`[data-subject-id="${subjectId}"]`).length === 0) {
                    // Создаем бейдж для предмета
                    const badge = $(`
                        <div class="badge bg-primary d-flex align-items-center mb-1 me-1" data-subject-id="${subjectId}">
                            <span>${subjectText}</span>
                            <button type="button" class="btn-close btn-close-white ms-2 delete-subject-btn" aria-label="Close"></button>
                            <input type="hidden" name="Input.SelectedSubjects" value="${subjectId}" />
                        </div>
                    `);
                    
                    // Добавляем обработчик для удаления
                    badge.find('.delete-subject-btn').click(function() {
                        badge.remove();
                        
                        // Удаляем поле цены для этого предмета
                        $(`#price-${subjectId}`).remove();
                        
                        // Возвращаем опцию в селект
                        if (select.find(`option[value="${subjectId}"]`).length === 0) {
                            select.append(new Option(subjectText, subjectId));
                            select.val(null).trigger('change');
                        }
                    });
                    
                    // Добавляем бейдж в контейнер
                    $('#subjectsContainer').append(badge);
                    
                    // Добавляем поле для цены предмета
                    const priceField = $(`
                        <div class="mb-2" id="price-${subjectId}">
                            <label class="form-label">${subjectText}</label>
                            <div class="input-group">
                                <input type="number" class="form-control" name="Input.SubjectPrices[${subjectId}]" placeholder="Цена за час"/>
                                <span class="input-group-text">₽</span>
                            </div>
                        </div>
                    `);
                    
                    $('#subjectPrices').append(priceField);
                    
                    // Удаляем опцию из селекта
                    select.find(`option[value="${subjectId}"]`).remove();
                    select.val(null).trigger('change');
                }
            });
        });
    </script>
} 