@page
@model Vibetech.Educat.Pages.Account.RegisterModel
@{
    ViewData["Title"] = "Регистрация";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">

<style>
    .button-spacing {
        margin-top: 15px;
    }
    
    /* Стили для календаря */
    .flatpickr-calendar {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);
        z-index: 9999 !important;
    }
    
    .flatpickr-day.selected, 
    .flatpickr-day.startRange, 
    .flatpickr-day.endRange, 
    .flatpickr-day.selected.inRange, 
    .flatpickr-day.startRange.inRange, 
    .flatpickr-day.endRange.inRange, 
    .flatpickr-day.selected:focus, 
    .flatpickr-day.startRange:focus, 
    .flatpickr-day.endRange:focus, 
    .flatpickr-day.selected:hover, 
    .flatpickr-day.startRange:hover, 
    .flatpickr-day.endRange:hover {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    
    .flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)), 
    .flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)), 
    .flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1)) {
        box-shadow: -10px 0 0 #0d6efd;
    }
    
    /* Стилизация поля даты */
    #birthDatePicker {
        background-color: #fff;
        cursor: pointer;
    }
    
    #birthDatePicker:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        border-color: #86b7fe;
    }
    
    /* Для полей с ошибками */
    .input-validation-error {
        border-color: #dc3545;
    }
    
    .input-validation-error:focus {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
    }
    
    .field-validation-error {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body p-5">
                    <h2 class="card-title text-center mb-4">Регистрация</h2>

                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>@Model.ErrorMessage
                        </div>
                    }

                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    <form method="post" enctype="multipart/form-data">
                        <div class="mb-4">
                            <label class="form-label fw-bold">Выберите роль</label>
                            <div class="d-flex gap-3">
                                <input type="radio" class="btn-check" name="Input.Role" id="roleStudent" value="Student" checked>
                                <label class="btn btn-outline-primary flex-grow-1" for="roleStudent">
                                    <i class="bi bi-mortarboard-fill me-2"></i>Ученик
                                </label>

                                <input type="radio" class="btn-check" name="Input.Role" id="roleTutor" value="Tutor">
                                <label class="btn btn-outline-primary flex-grow-1" for="roleTutor">
                                    <i class="bi bi-person-workspace me-2"></i>Репетитор
                                </label>
                            </div>
                            <span asp-validation-for="Input.Role" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Login" class="form-label fw-bold">
                                <i class="bi bi-person-circle me-2"></i>Логин
                            </label>
                            <div class="input-group has-validation">
                                <input asp-for="Input.Login" class="form-control" placeholder="Введите логин" autocomplete="username" />
                                <div class="invalid-feedback" id="login-feedback">
                                    <span asp-validation-for="Input.Login"></span>
                                </div>
                            </div>
                            @if (Model.LoginAlreadyExists)
                            {
                                <div class="text-danger mt-1">
                                    <i class="bi bi-exclamation-triangle-fill me-1"></i>Пользователь с таким логином уже существует
                                </div>
                            }
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Password" class="form-label fw-bold">
                                <i class="bi bi-key-fill me-2"></i>Пароль
                            </label>
                            <div class="input-group has-validation">
                                <input asp-for="Input.Password" type="password" class="form-control" placeholder="Введите пароль" autocomplete="new-password" />
                                <div class="invalid-feedback">
                                    <span asp-validation-for="Input.Password"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.ConfirmPassword" class="form-label fw-bold">
                                <i class="bi bi-key me-2"></i>Подтверждение пароля
                            </label>
                            <div class="input-group has-validation">
                                <input asp-for="Input.ConfirmPassword" type="password" class="form-control" placeholder="Подтвердите пароль" autocomplete="new-password" />
                                <div class="invalid-feedback">
                                    <span asp-validation-for="Input.ConfirmPassword"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Input.LastName" class="form-label fw-bold">
                                        <i class="bi bi-person-vcard me-2"></i>Фамилия
                                    </label>
                                    <input asp-for="Input.LastName" class="form-control" placeholder="Введите фамилию" />
                                    <span asp-validation-for="Input.LastName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Input.FirstName" class="form-label fw-bold">
                                        <i class="bi bi-person me-2"></i>Имя
                                    </label>
                                    <input asp-for="Input.FirstName" class="form-control" placeholder="Введите имя" />
                                    <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Input.MiddleName" class="form-label fw-bold">
                                        <i class="bi bi-person me-2"></i>Отчество
                                    </label>
                                    <input asp-for="Input.MiddleName" class="form-control" placeholder="Введите отчество" />
                                    <span asp-validation-for="Input.MiddleName" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3 w-100">
                            <label asp-for="Input.BirthDate" class="form-label fw-bold">
                                <i class="bi bi-calendar3 me-2"></i>Дата рождения
                            </label>
                            <div class="input-group has-validation">
                                <input asp-for="Input.BirthDate" type="text" class="form-control datepicker" id="birthDatePicker" placeholder="Выберите дату рождения" value="" readonly />
                                <div class="invalid-feedback">
                                    <span asp-validation-for="Input.BirthDate"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-bold">
                                <i class="bi bi-gender-ambiguous me-2"></i>Пол
                            </label>
                            <div class="d-flex gap-3">
                                <input type="radio" class="btn-check" name="Input.Gender" id="genderMale" value="Male">
                                <label class="btn btn-outline-secondary flex-grow-1" for="genderMale">
                                    <i class="bi bi-gender-male me-2"></i>Мужской
                                </label>

                                <input type="radio" class="btn-check" name="Input.Gender" id="genderFemale" value="Female">
                                <label class="btn btn-outline-secondary flex-grow-1" for="genderFemale">
                                    <i class="bi bi-gender-female me-2"></i>Женский
                                </label>
                            </div>
                            <span asp-validation-for="Input.Gender" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Photo" class="form-label fw-bold">
                                <i class="bi bi-camera me-2"></i>Фото
                            </label>
                            <input asp-for="Input.Photo" type="file" class="form-control" accept="image/*" />
                            <span asp-validation-for="Input.Photo" class="text-danger"></span>
                        </div>

                        <div id="tutorFields" style="display: none;">
                            <div class="mb-4">
                                <div class="alert alert-info" role="alert">
                                    <i class="bi bi-info-circle-fill me-2"></i>
                                    <strong>Обратите внимание!</strong> Для регистрации в качестве репетитора необходимо заполнить следующие поля:
                                    <ul class="mb-0 mt-2">
                                        <li>Образование</li>
                                        <li>Стоимость часа</li>
                                        <li>Опыт работы</li>
                                        <li>Выбрать хотя бы один предмет</li>
                                        <li>Выбрать хотя бы одну программу подготовки</li>
                                    </ul>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label asp-for="Input.Education" class="form-label fw-bold">
                                    <i class="bi bi-mortarboard me-2"></i>Образование
                                </label>
                                <div class="input-group has-validation">
                                    <textarea asp-for="Input.Education" class="form-control" placeholder="Введите информацию об образовании (ВУЗ, факультет, специальность, год окончания)" rows="3"></textarea>
                                    <div class="invalid-feedback">
                                        <span asp-validation-for="Input.Education"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="bi bi-list-check me-2"></i>Программы подготовки
                                </label>
                                <div id="programsContainer" class="d-flex flex-wrap gap-2 mb-2">
                                    <!-- Здесь будут отображаться выбранные программы -->
                                </div>
                                <select id="programSelect" class="form-select">
                                    @foreach (var program in Model.AvailablePrograms)
                                    {
                                        <option value="@program.Value">@program.Text</option>
                                    }
                                </select>
                                <div class="button-spacing">
                                    <button class="btn btn-outline-primary w-100" type="button" id="addProgramBtn">
                                        <i class="bi bi-plus-lg"></i> Добавить программу
                                    </button>
                                </div>
                                <!-- Скрытые поля для передачи данных -->
                                <div id="selectedProgramsInputs">
                                    <!-- сюда будут добавляться hidden inputs -->
                                </div>
                                <span asp-validation-for="Input.SelectedPrograms" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.ExperienceYears" class="form-label fw-bold">
                                    <i class="bi bi-clock-history me-2"></i>Опыт работы (лет)
                                </label>
                                <div class="input-group has-validation">
                                    <input asp-for="Input.ExperienceYears" type="number" min="0" max="50" class="form-control" placeholder="Введите опыт работы" />
                                    <span class="input-group-text">лет</span>
                                    <div class="invalid-feedback">
                                        <span asp-validation-for="Input.ExperienceYears"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.HourlyRate" class="form-label fw-bold">
                                    <i class="bi bi-currency-ruble me-2"></i>Базовая стоимость часа (₽)
                                </label>
                                <div class="input-group has-validation">
                                    <input asp-for="Input.HourlyRate" type="number" min="0" max="10000" step="0.01" class="form-control" placeholder="Введите стоимость" />
                                    <span class="input-group-text">₽</span>
                                    <div class="invalid-feedback">
                                        <span asp-validation-for="Input.HourlyRate"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label fw-bold">
                                    <i class="bi bi-book me-2"></i>Предметы
                                </label>
                                <div id="subjectsContainer" class="d-flex flex-wrap gap-2 mb-2">
                                    <!-- Здесь будут отображаться выбранные предметы -->
                                </div>
                                <select id="subjectSelect" class="form-select">
                                    @foreach (var subject in Model.AvailableSubjects)
                                    {
                                        <option value="@subject.Value">@subject.Text</option>
                                    }
                                </select>
                                <div class="button-spacing">
                                    <button class="btn btn-outline-primary w-100" type="button" id="addSubjectBtn">
                                        <i class="bi bi-plus-lg"></i> Добавить предмет
                                    </button>
                                </div>
                                <!-- Скрытые поля для передачи данных -->
                                <div id="selectedSubjectsInputs">
                                    <!-- сюда будут добавляться hidden inputs -->
                                </div>
                                <span asp-validation-for="Input.SelectedSubjects" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="d-grid gap-2 mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-person-plus-fill me-2"></i>Зарегистрироваться
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/ru.js"></script>
    <script>
        $(document).ready(function() {
            // Включение валидации в реальном времени
            $('form').data('validator').settings.onkeyup = function (element, event) {
                if (element.name in $('form').data('validator').settings.rules) {
                    $('form').data('validator').element(element);
                }
            };
            
            // Инициализация календаря
            flatpickr("#birthDatePicker", {
                dateFormat: "d.m.Y",
                locale: "ru",
                maxDate: new Date(),
                allowInput: false,
                disableMobile: true,
                onChange: function(selectedDates, dateStr) {
                    if (dateStr) {
                        $("#birthDatePicker").attr('data-date-set', 'true');
                        $('form').data('validator').element("#birthDatePicker");
                    }
                }
            });
            
            // Кастомное правило для даты рождения
            $.validator.addMethod("birthDateRequired", function(value, element) {
                return $(element).attr('data-date-set') === 'true';
            }, "Пожалуйста, выберите дату рождения");
            
            $("#birthDatePicker").rules("add", {
                birthDateRequired: true
            });
            
            // Select2 для выпадающих списков
            $('#subjectSelect, #programSelect').select2({
                width: '100%'
            });

            // Показывать/скрывать поля репетитора
            $('input[name="Input.Role"]').change(function() {
                if ($(this).val() === 'Tutor') {
                    $('#tutorFields').show();
                } else {
                    $('#tutorFields').hide();
                }
            });

            // Управление программами подготовки
            $('#addProgramBtn').click(function() {
                addSelectItem('program', $('#programSelect'), $('#programsContainer'), 'Input.SelectedPrograms');
            });

            // Управление предметами
            $('#addSubjectBtn').click(function() {
                addSelectItem('subject', $('#subjectSelect'), $('#subjectsContainer'), 'Input.SelectedSubjects');
            });
            
            // Вспомогательная функция для добавления элементов из селекта
            function addSelectItem(type, select, container, inputName) {
                const id = select.val();
                const text = select.find('option:selected').text();
                
                if (!id) return;
                
                const dataAttr = type === 'program' ? 'data-program' : 'data-subject-id';
                
                // Проверяем, не выбран ли уже этот элемент
                if (container.find(`[${dataAttr}="${id}"]`).length === 0) {
                    // Создаем бейдж
                    const badge = $(`
                        <div class="badge bg-primary d-flex align-items-center mb-1 me-1" ${dataAttr}="${id}">
                            <span>${text}</span>
                            <button type="button" class="btn-close btn-close-white ms-2 delete-${type}-btn" aria-label="Close"></button>
                            <input type="hidden" name="${inputName}" value="${id}" />
                        </div>
                    `);
                    
                    // Обработчик для удаления
                    badge.find(`.delete-${type}-btn`).click(function() {
                        badge.remove();
                        
                        // Возвращаем опцию в селект
                        if (select.find(`option[value="${id}"]`).length === 0) {
                            select.append(new Option(text, id));
                            select.val(null).trigger('change');
                        }
                    });
                    
                    // Добавляем бейдж и удаляем опцию из селекта
                    container.append(badge);
                    select.find(`option[value="${id}"]`).remove();
                    select.val(null).trigger('change');
                }
            }
        });
    </script>
} 